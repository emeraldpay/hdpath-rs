name: Test

on:
  push:
    branches:
      - master
      - ci/*
  pull_request:
    branches:
      - master

jobs:
  tests:
    name: Test ${{ matrix.os }}
    strategy:
      matrix:
        os: ["windows-latest", "macos-latest", "ubuntu-latest"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all --release
        env:
          RUST_BACKTRACE: "1"

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features --release
        env:
          RUST_BACKTRACE: "1"

  coverage:
    name: Coverage Report
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --no-fail-fast --all-features
        env:
          CARGO_INCREMENTAL: '0'
          RUSTFLAGS: '-Cinstrument-coverage -Zcoverage-options=branch -Ccodegen-units=1 -Clink-dead-code -Coverflow-checks=off'
          RUSTDOCFLAGS: '-Cinstrument-coverage -Zcoverage-options=branch -Ccodegen-units=1 -Clink-dead-code -Coverflow-checks=off'

      - name: Coverage Report
        id: coverage
        uses: actions-rs/grcov@v0.1.5

      - name: Upload to Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ${{ steps.coverage.outputs.report }}

      - name: Upload to Codecov
        uses: codecov/codecov-action@v1
        with:
          file: ${{ steps.coverage.outputs.report }}
